


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RESET, DATA, READONLY
    2 00000000                 EXPORT           __Vectors
    3 00000000         
    4 00000000         __Vectors
    5 00000000 10001000        DCD              0x10001000  ; Initial Stack Poi
                                                            nter
    6 00000004 00000000        DCD              Reset_Handler ; Reset Handler
    7 00000008                 ALIGN
    8 00000008         
    9 00000008                 AREA             mycode, CODE, READONLY
   10 00000000                 ENTRY
   11 00000000                 EXPORT           Reset_Handler
   12 00000000         
   13 00000000         Reset_Handler
   14 00000000 4811            LDR              R0, =array
   15 00000002 F04F 010A       MOV              R1, #10     ; R1 = array length
                                                            
   16 00000006 F04F 0201       MOV              R2, #1      ; R2 = outer loop i
                                                            ndex (i)
   17 0000000A         
   18 0000000A         outer_loop
   19 0000000A 428A            CMP              R2, R1
   20 0000000C DA1A            BGE              done        ; if i >= length, s
                                                            orting done
   21 0000000E         
   22 0000000E EB00 0382       ADD              R3, R0, R2, LSL #2 
                                                            ; R3 = &array[i]
   23 00000012 681C            LDR              R4, [R3]    ; R4 = key = array[
                                                            i]
   24 00000014 4615            MOV              R5, R2      ; R5 = j = i
   25 00000016         
   26 00000016         inner_loop
   27 00000016 F1A5 0601       SUB              R6, R5, #1
   28 0000001A 2E00            CMP              R6, #0
   29 0000001C DB0B            BLT              insert_key  ; if j <= 0, insert
                                                             key
   30 0000001E         
   31 0000001E EB00 0786       ADD              R7, R0, R6, LSL #2 
                                                            ; R7 = &array[j-1]
   32 00000022 F8D7 8000       LDR              R8, [R7]    ; R8 = array[j-1]
   33 00000026 45A0            CMP              R8, R4
   34 00000028 DD05            BLE              insert_key  ; if array[j-1] <= 
                                                            key, insert
   35 0000002A         
   36 0000002A EB00 0985       ADD              R9, R0, R5, LSL #2 
                                                            ; R9 = &array[j]
   37 0000002E F8C9 8000       STR              R8, [R9]    ; array[j] = array[
                                                            j-1]
   38 00000032 4635            MOV              R5, R6      ; j--
   39 00000034         
   40 00000034 E7EF            B                inner_loop
   41 00000036         
   42 00000036         insert_key
   43 00000036 EB00 0A85       ADD              R10, R0, R5, LSL #2 
                                                            ; R10 = &array[j]
   44 0000003A F8CA 4000       STR              R4, [R10]   ; array[j] = key
   45 0000003E         
   46 0000003E F102 0201       ADD              R2, R2, #1  ; i++
   47 00000042 E7E2            B                outer_loop



ARM Macro Assembler    Page 2 


   48 00000044         
   49 00000044         done
   50 00000044 E7FE            B                done        ; Infinite loop to 
                                                            end program
   51 00000046         
   52 00000046         ; -----------------------------
   53 00000046 E7FE    STOP    B                STOP
   54 00000048         ; -----------------------------
   55 00000048         
   56 00000048 00000000        AREA             mydata, DATA, READWRITE
   57 00000000         array
   58 00000000 00000005 
              00000003 
              00000007 
              00000002 
              00000009 
              00000006 
              00000001 
              00000008 
              00000004 
              00000000         DCD              5, 3, 7, 2, 9, 6, 1, 8, 4, 0
   59 00000028         
   60 00000028                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=Q4.d -oQ
4.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LP
C17xx --predefine="__EVAL SETA 1" --list=Q4.lst Q4.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 1 in file Q4.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 4 in file Q4.asm
   Uses
      At line 2 in file Q4.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 13 in file Q4.asm
   Uses
      At line 6 in file Q4.asm
      At line 11 in file Q4.asm

STOP 00000046

Symbol: STOP
   Definitions
      At line 53 in file Q4.asm
   Uses
      At line 53 in file Q4.asm
Comment: STOP used once
done 00000044

Symbol: done
   Definitions
      At line 49 in file Q4.asm
   Uses
      At line 20 in file Q4.asm
      At line 50 in file Q4.asm

inner_loop 00000016

Symbol: inner_loop
   Definitions
      At line 26 in file Q4.asm
   Uses
      At line 40 in file Q4.asm
Comment: inner_loop used once
insert_key 00000036

Symbol: insert_key
   Definitions
      At line 42 in file Q4.asm
   Uses
      At line 29 in file Q4.asm
      At line 34 in file Q4.asm

mycode 00000000

Symbol: mycode
   Definitions
      At line 9 in file Q4.asm
   Uses
      None
Comment: mycode unused
outer_loop 0000000A

Symbol: outer_loop
   Definitions
      At line 18 in file Q4.asm
   Uses
      At line 47 in file Q4.asm
Comment: outer_loop used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

array 00000000

Symbol: array
   Definitions
      At line 57 in file Q4.asm
   Uses
      At line 14 in file Q4.asm
Comment: array used once
mydata 00000000

Symbol: mydata
   Definitions
      At line 56 in file Q4.asm
   Uses
      None
Comment: mydata unused
2 symbols
344 symbols in table
